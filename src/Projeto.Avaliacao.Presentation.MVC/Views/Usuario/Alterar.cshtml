@model Projeto.Avaliacao.Application.ViewModels.UsuarioLoginTelefoneViewModel

@{
    ViewBag.Title = "Alterar";
}

<h2>Alterar</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>UsuarioLoginTelefoneViewModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.UsuarioID)

    <div class="form-group">
        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CPF, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DataNascimento, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DataNascimento, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NomeMae, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NomeMae, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NomeMae, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.HiddenFor(model => model.LoginID)

    <div class="form-group">
        @Html.LabelFor(model => model.Login.LoginUsuario, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Login.LoginUsuario, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Login.LoginUsuario, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Senha, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Login.Senha, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Login.Senha, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.HiddenFor(model => model.TelefoneID)

    @if (Model.Telefones.Any())
    {
        <table class="table table-hover">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Telefones.First().Fone)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Telefones.First().Ativo)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model.Telefones)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Fone)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Ativo)
                    </td>
                    <td>
                        <a href="@Url.Action("Alterar", "Telefone", new {id = item.TelefoneID})" data-modal="" class="btn btn-default">
                            <span title="Editar" class="glyphicon glyphicon-pencil"></span>
                        </a>
                        <a href="@Url.Action("DeletarTelefone", "Telefone", new {id = item.TelefoneID})" data-modal="" class="btn btn-danger">
                            <span title="Excluir" class="glyphicon glyphicon-trash"></span>
                        </a>
                    </td>
                </tr>
            }
        </table>
    }
    else
    {
        <table class="table">
            <tr>
                <th>
                    Nenhum Telefone Cadastrado.
                </th>
            </tr>
        </table>
    }

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
